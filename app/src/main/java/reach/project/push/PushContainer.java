package reach.project.push;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/pushcontainer.proto

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import java.util.Collections;
import java.util.List;

import reach.project.apps.App;
import reach.project.music.Song;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class PushContainer extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_SENDERID = 0L;
  public static final Integer DEFAULT_SONGCOUNT = 0;
  public static final Integer DEFAULT_APPCOUNT = 0;
  public static final List<Song> DEFAULT_SONG = Collections.emptyList();
  public static final List<App> DEFAULT_APP = Collections.emptyList();
  public static final String DEFAULT_FIRSTSONGNAME = "hello_world";
  public static final String DEFAULT_FIRSTAPPNAME = "hello_world";
  public static final String DEFAULT_USERNAME = "hello_world";
  public static final String DEFAULT_USERIMAGE = "hello_world";

  @ProtoField(tag = 1, type = INT64)
  public final Long senderId;

  @ProtoField(tag = 2, type = INT32)
  public final Integer songCount;

  @ProtoField(tag = 3, type = INT32)
  public final Integer appCount;

  @ProtoField(tag = 4, label = REPEATED, messageType = Song.class)
  public final List<Song> song;

  @ProtoField(tag = 5, label = REPEATED, messageType = App.class)
  public final List<App> app;

  @ProtoField(tag = 6, type = STRING)
  public final String firstSongName;

  @ProtoField(tag = 7, type = STRING)
  public final String firstAppName;

  @ProtoField(tag = 8, type = STRING)
  public final String userName;

  @ProtoField(tag = 9, type = STRING)
  public final String userImage;

  public PushContainer(Long senderId, Integer songCount, Integer appCount, List<Song> song, List<App> app, String firstSongName, String firstAppName, String userName, String userImage) {
    this.senderId = senderId;
    this.songCount = songCount;
    this.appCount = appCount;
    this.song = immutableCopyOf(song);
    this.app = immutableCopyOf(app);
    this.firstSongName = firstSongName;
    this.firstAppName = firstAppName;
    this.userName = userName;
    this.userImage = userImage;
  }

  private PushContainer(Builder builder) {
    this(builder.senderId, builder.songCount, builder.appCount, builder.song, builder.app, builder.firstSongName, builder.firstAppName, builder.userName, builder.userImage);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PushContainer)) return false;
    PushContainer o = (PushContainer) other;
    return equals(senderId, o.senderId)
        && equals(songCount, o.songCount)
        && equals(appCount, o.appCount)
        && equals(song, o.song)
        && equals(app, o.app)
        && equals(firstSongName, o.firstSongName)
        && equals(firstAppName, o.firstAppName)
        && equals(userName, o.userName)
        && equals(userImage, o.userImage);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = senderId != null ? senderId.hashCode() : 0;
      result = result * 37 + (songCount != null ? songCount.hashCode() : 0);
      result = result * 37 + (appCount != null ? appCount.hashCode() : 0);
      result = result * 37 + (song != null ? song.hashCode() : 1);
      result = result * 37 + (app != null ? app.hashCode() : 1);
      result = result * 37 + (firstSongName != null ? firstSongName.hashCode() : 0);
      result = result * 37 + (firstAppName != null ? firstAppName.hashCode() : 0);
      result = result * 37 + (userName != null ? userName.hashCode() : 0);
      result = result * 37 + (userImage != null ? userImage.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PushContainer> {

    public Long senderId;
    public Integer songCount;
    public Integer appCount;
    public List<Song> song;
    public List<App> app;
    public String firstSongName;
    public String firstAppName;
    public String userName;
    public String userImage;

    public Builder() {
    }

    public Builder(PushContainer message) {
      super(message);
      if (message == null) return;
      this.senderId = message.senderId;
      this.songCount = message.songCount;
      this.appCount = message.appCount;
      this.song = copyOf(message.song);
      this.app = copyOf(message.app);
      this.firstSongName = message.firstSongName;
      this.firstAppName = message.firstAppName;
      this.userName = message.userName;
      this.userImage = message.userImage;
    }

    public Builder senderId(Long senderId) {
      this.senderId = senderId;
      return this;
    }

    public Builder songCount(Integer songCount) {
      this.songCount = songCount;
      return this;
    }

    public Builder appCount(Integer appCount) {
      this.appCount = appCount;
      return this;
    }

    public Builder song(List<Song> song) {
      this.song = checkForNulls(song);
      return this;
    }

    public Builder app(List<App> app) {
      this.app = checkForNulls(app);
      return this;
    }

    public Builder firstSongName(String firstSongName) {
      this.firstSongName = firstSongName;
      return this;
    }

    public Builder firstAppName(String firstAppName) {
      this.firstAppName = firstAppName;
      return this;
    }

    public Builder userName(String userName) {
      this.userName = userName;
      return this;
    }

    public Builder userImage(String userImage) {
      this.userImage = userImage;
      return this;
    }

    @Override
    public PushContainer build() {
      return new PushContainer(this);
    }
  }
}
