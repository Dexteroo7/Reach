package reach.project.onBoarding;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/AccountCreationData.proto

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import java.util.Collections;
import java.util.List;

import reach.project.apps.App;
import reach.project.music.Song;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class AccountCreationData extends Message {
  private static final long serialVersionUID = 0L;

  public static final List<App> DEFAULT_APPS = Collections.emptyList();
  public static final List<Song> DEFAULT_SONGS = Collections.emptyList();
  public static final List<String> DEFAULT_GENRES = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED, messageType = App.class)
  public final List<App> apps;

  @ProtoField(tag = 2, label = REPEATED, messageType = Song.class)
  public final List<Song> songs;

  @ProtoField(tag = 3, type = STRING, label = REPEATED)
  public final List<String> genres;

  @ProtoField(tag = 4)
  public final OnboardingData onboardingData;

  public AccountCreationData(List<App> apps, List<Song> songs, List<String> genres, OnboardingData onboardingData) {
    this.apps = immutableCopyOf(apps);
    this.songs = immutableCopyOf(songs);
    this.genres = immutableCopyOf(genres);
    this.onboardingData = onboardingData;
  }

  private AccountCreationData(Builder builder) {
    this(builder.apps, builder.songs, builder.genres, builder.onboardingData);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AccountCreationData)) return false;
    AccountCreationData o = (AccountCreationData) other;
    return equals(apps, o.apps)
        && equals(songs, o.songs)
        && equals(genres, o.genres)
        && equals(onboardingData, o.onboardingData);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = apps != null ? apps.hashCode() : 1;
      result = result * 37 + (songs != null ? songs.hashCode() : 1);
      result = result * 37 + (genres != null ? genres.hashCode() : 1);
      result = result * 37 + (onboardingData != null ? onboardingData.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AccountCreationData> {

    public List<App> apps;
    public List<Song> songs;
    public List<String> genres;
    public OnboardingData onboardingData;

    public Builder() {
    }

    public Builder(AccountCreationData message) {
      super(message);
      if (message == null) return;
      this.apps = copyOf(message.apps);
      this.songs = copyOf(message.songs);
      this.genres = copyOf(message.genres);
      this.onboardingData = message.onboardingData;
    }

    public Builder apps(List<App> apps) {
      this.apps = checkForNulls(apps);
      return this;
    }

    public Builder songs(List<Song> songs) {
      this.songs = checkForNulls(songs);
      return this;
    }

    public Builder genres(List<String> genres) {
      this.genres = checkForNulls(genres);
      return this;
    }

    public Builder onboardingData(OnboardingData onboardingData) {
      this.onboardingData = onboardingData;
      return this;
    }

    @Override
    public AccountCreationData build() {
      return new AccountCreationData(this);
    }
  }
}
