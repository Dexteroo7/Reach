package reach.project.music;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: /Users/ashish/Documents/proto/musiclist.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class AlbumArtData extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ARTISTMBID = "hello_world";
  public static final String DEFAULT_RELEASEGROUPMBID = "hello_world";
  public static final String DEFAULT_ALBUMARTURL = "hello_world";
  public static final String DEFAULT_TITLE = "hello_world";
  public static final String DEFAULT_RELEASE = "hello_world";
  public static final String DEFAULT_ARTIST = "hello_world";
  public static final Long DEFAULT_DURATION = 0L;

  @ProtoField(tag = 1, type = STRING)
  public final String artistMBID;

  @ProtoField(tag = 2, type = STRING)
  public final String releaseGroupMBID;

  @ProtoField(tag = 3, type = STRING)
  public final String albumArtUrl;

  @ProtoField(tag = 4, type = STRING)
  public final String title;

  @ProtoField(tag = 5, type = STRING)
  public final String release;

  @ProtoField(tag = 6, type = STRING)
  public final String artist;

  @ProtoField(tag = 7, type = INT64)
  public final Long duration;

  public AlbumArtData(String artistMBID, String releaseGroupMBID, String albumArtUrl, String title, String release, String artist, Long duration) {
    this.artistMBID = artistMBID;
    this.releaseGroupMBID = releaseGroupMBID;
    this.albumArtUrl = albumArtUrl;
    this.title = title;
    this.release = release;
    this.artist = artist;
    this.duration = duration;
  }

  private AlbumArtData(Builder builder) {
    this(builder.artistMBID, builder.releaseGroupMBID, builder.albumArtUrl, builder.title, builder.release, builder.artist, builder.duration);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {

    if (other == this) return true;
    if (!(other instanceof AlbumArtData)) return false;
    AlbumArtData o = (AlbumArtData) other;
    return equals(artistMBID, o.artistMBID)
            && equals(releaseGroupMBID, o.releaseGroupMBID)
            && equals(albumArtUrl, o.albumArtUrl)
            && equals(title, o.title)
            && equals(release, o.release)
            && equals(artist, o.artist)
            && equals(duration, o.duration);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = artistMBID != null ? artistMBID.hashCode() : 0;
      result = result * 37 + (releaseGroupMBID != null ? releaseGroupMBID.hashCode() : 0);
      result = result * 37 + (albumArtUrl != null ? albumArtUrl.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (release != null ? release.hashCode() : 0);
      result = result * 37 + (artist != null ? artist.hashCode() : 0);
      result = result * 37 + (duration != null ? duration.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AlbumArtData> {

    public String artistMBID;
    public String releaseGroupMBID;
    public String albumArtUrl;
    public String title;
    public String release;
    public String artist;
    public Long duration;

    public Builder() {
    }

    public Builder(AlbumArtData message) {
      super(message);
      if (message == null) return;
      this.artistMBID = message.artistMBID;
      this.releaseGroupMBID = message.releaseGroupMBID;
      this.albumArtUrl = message.albumArtUrl;
      this.title = message.title;
      this.release = message.release;
      this.artist = message.artist;
      this.duration = message.duration;
    }

    public Builder artistMBID(String artistMBID) {
      this.artistMBID = artistMBID;
      return this;
    }

    public Builder releaseGroupMBID(String releaseGroupMBID) {
      this.releaseGroupMBID = releaseGroupMBID;
      return this;
    }

    public Builder albumArtUrl(String albumArtUrl) {
      this.albumArtUrl = albumArtUrl;
      return this;
    }

    public Builder title(String title) {
      this.title = title;
      return this;
    }

    public Builder release(String release) {
      this.release = release;
      return this;
    }

    public Builder artist(String artist) {
      this.artist = artist;
      return this;
    }

    public Builder duration(Long duration) {
      this.duration = duration;
      return this;
    }

    @Override
    public AlbumArtData build() {
      return new AlbumArtData(this);
    }
  }
}