package reach.project.apps;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: proto/app.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class AppList extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_CLIENTID = 0L;
  public static final List<App> DEFAULT_APP = Collections.emptyList();

  @ProtoField(tag = 1, type = INT64)
  public final Long clientId;

  @ProtoField(tag = 2, label = REPEATED, messageType = App.class)
  public final List<App> app;

  public AppList(Long clientId, List<App> app) {
    this.clientId = clientId;
    this.app = immutableCopyOf(app);
  }

  private AppList(Builder builder) {
    this(builder.clientId, builder.app);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AppList)) return false;
    AppList o = (AppList) other;
    return equals(clientId, o.clientId)
        && equals(app, o.app);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = clientId != null ? clientId.hashCode() : 0;
      result = result * 37 + (app != null ? app.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AppList> {

    public Long clientId;
    public List<App> app;

    public Builder() {
    }

    public Builder(AppList message) {
      super(message);
      if (message == null) return;
      this.clientId = message.clientId;
      this.app = copyOf(message.app);
    }

    public Builder clientId(Long clientId) {
      this.clientId = clientId;
      return this;
    }

    public Builder app(List<App> app) {
      this.app = checkForNulls(app);
      return this;
    }

    @Override
    public AppList build() {
      return new AppList(this);
    }
  }
}
